name: Release micommunity

on:
  push:
    paths:
      - MiCommunityTool.py
  pull_request:
    paths:
      - MiCommunityTool.py
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: |
          version=$(grep -oP '(?<=version = ")(.*)(?=")' MiCommunityTool.py)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Tag
        run: |
          if ! git ls-remote --tags origin | grep -q "$VERSION"; then
            git tag "$VERSION"
            git push origin "$VERSION"
          else
            echo "Tag $VERSION already exists, skipping tag creation."
          fi

      - name: Create Release and Upload
        run: |
          if ! gh release view $VERSION; then
            gh release create $VERSION --title "Release $VERSION"
            gh release upload $VERSION ./MiCommunityTool.py --clobber
          else
            echo "Release $VERSION already exists, skipping release creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}